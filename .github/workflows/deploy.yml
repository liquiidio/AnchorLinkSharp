name: Deploy

on: [push]

jobs:
  split-upm:
    name: Split UPM branch
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: unity_develop
        fetch-depth: 0
        token: ${{ secrets.FG_L_PAT2 }}
        submodules: recursive
    - name: split upm branch
      run: |
        git branch -d upm &> /dev/null || echo upm branch not found # recreate the upm branch each time
        echo "********************** ROOT **********************"
        ls
        git config --global user.name 'github-bot'
        git config --global user.email 'github-bot@users.noreply.github.com'
        git checkout -b upm                                            # checkout the branch
        mkdir temp
        mkdir temp/anchorlinktransportsharp
        mkdir temp/eosiosigningrequestsharp
        cp -r anchorlinktransportsharp/. temp/anchorlinktransportsharp
        cp -r eosiosigningrequestsharp/. temp/eosiosigningrequestsharp
        git rm .gitmodules
        git rm -rf anchorlinktransportsharp
        git rm -rf eosiosigningrequestsharp
        git add .
        git rm -r .github
        git commit -am "removed submodules and merged them to upm"
        mkdir anchorlinktransportsharp
        mkdir eosiosigningrequestsharp
        cp -r temp/anchorlinktransportsharp/. anchorlinktransportsharp
        cp -r temp/eosiosigningrequestsharp/. eosiosigningrequestsharp
        git rm -rf temp
        git add .
        git commit -m "rearraged the files to their correct folder"
        git push -u origin upm --force                              # commit the branch

  release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs: split-upm
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Determine version
        run: echo "VERSION=$(git describe --tags --dirty)" >> $GITHUB_ENV
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: 1.0.0
          name: 1.0.0
          body: ${{ env.VERSION }}


