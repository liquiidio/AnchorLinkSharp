name: Deploy

on: [push]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        dotnet-version: ['3.0', '3.1.x', '5.0.x', '6.0.x', '7.0.x']
    name: Build and test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0
      - name: Setup .NET SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore ./AnchorLinkSharp/Anchor.sln
      - name: Build
        run: dotnet build ./AnchorLinkSharp/Anchor.sln --configuration Release --no-restore
      - name: Test
        run: dotnet test --verbosity normal --logger trx --results-directory "TestResults"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: TestResults
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
        
  pack-nuget:
    needs: build
    runs-on: ubuntu-20.04
    name: Dotnet Pack
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1.x
      - name: Determine version
        run: echo "VERSION=$(git describe --tags --dirty)" >> $GITHUB_ENV
      - name: Pack
        run: dotnet pack --output ./artifacts --configuration Release -p:Version=$VERSION
      - name: Upload package
        uses: actions/upload-artifact@v1
        with:
          name: artifacts
          path: ./artifacts
  
  split-upm:
    needs: pack-nuget
    name: Split UPM branch
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: unity_develop
        fetch-depth: 0
        token: ${{ secrets.FG_L_PAT2 }}
        submodules: recursive
    - name: split upm branch
      run: |
        git branch -d upm &> /dev/null || echo upm branch not found # recreate the upm branch each time
        echo "********************** ROOT **********************"
        ls
        git config --global user.name 'github-bot'
        git config --global user.email 'github-bot@users.noreply.github.com'
        git checkout -b upm                                            # checkout the branch
        git subtree add --prefix=temp/anchorlinktransportsharp anchorlinktransportsharp $(git rev-parse HEAD:anchorlinktransportsharp)
        git subtree add --prefix=temp/eosiosigningrequestsharp eosiosigningrequestsharp $(git rev-parse HEAD:eosiosigningrequestsharp)
        git rm .gitmodules
        git rm -rf anchorlinktransportsharp
        git rm -rf eosiosigningrequestsharp
        git add .
        git rm -r .github
        git commit -am "removed submodules and merged them to upm"
        mkdir anchorlinktransportsharp
        mkdir eosiosigningrequestsharp
        cp -r temp/anchorlinktransportsharp/. anchorlinktransportsharp
        cp -r temp/eosiosigningrequestsharp/. eosiosigningrequestsharp
        git rm -rf temp
        git add .
        git commit -m "rearraged the files to their correct folder"
        git push -u origin upm --force                              # commit the branch

  release:
    name: Create GitHub release
    runs-on: ubuntu-20.04
    needs: split-upm
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Determine version
        run: echo "VERSION=$(git describe --tags --dirty)" >> $GITHUB_ENV
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: 1.0.0
          name: 1.0.0
          body: ${{ env.VERSION }}

